package main

import "fmt"

func isValidSudoku(board [][]byte) bool {
	col := make(map[string]bool)
	row := make(map[string]bool)

	subbox := make(map[string]bool)

	for i, v := range board {
		for j, vv := range v {
			if vv != '.' && (col[fmt.Sprintf(`%d:%c`, j, vv)] != false || row[fmt.Sprintf(`%d:%c`, i, vv)] != false || subbox[fmt.Sprintf(`%d:%d:%c`, i/3, j/3, vv)] != false) {
				return false
			}

			col[fmt.Sprintf(`%d:%c`, j, vv)] = true
			row[fmt.Sprintf(`%d:%c`, i, vv)] = true
			subbox[fmt.Sprintf(`%d:%d:%c`, i/3, j/3, vv)] = true
		}
	}

	return true
}

func main() {
	// board := [][]byte{
	// 	{'5', '3', '.', '.', '7', '.', '.', '.', '.'},
	// 	{'6', '.', '.', '1', '9', '5', '.', '.', '.'},
	// 	{'.', '9', '8', '.', '.', '.', '.', '6', '.'},
	// 	{'8', '.', '.', '.', '6', '.', '.', '.', '3'},
	// 	{'4', '.', '.', '8', '.', '3', '.', '.', '1'},
	// 	{'7', '.', '.', '.', '2', '.', '.', '.', '6'},
	// 	{'.', '6', '.', '.', '.', '.', '2', '8', '.'},
	// 	{'.', '.', '.', '4', '1', '9', '.', '.', '5'},
	// 	{'.', '.', '.', '.', '8', '.', '.', '7', '9'},
	// }

	board := [][]byte{
		{'.', '.', '.', '.', '5', '.', '.', '1', '.'},
		{'.', '4', '.', '3', '.', '.', '.', '.', '.'},
		{'.', '.', '.', '.', '.', '3', '.', '.', '1'},
		{'8', '.', '.', '.', '.', '.', '.', '2', '.'},
		{'.', '.', '2', '.', '7', '.', '.', '.', '.'},
		{'.', '1', '5', '.', '.', '.', '.', '.', '.'},
		{'.', '.', '.', '.', '.', '2', '.', '.', '.'},
		{'.', '2', '.', '9', '.', '.', '.', '.', '.'},
		{'.', '.', '4', '.', '.', '.', '.', '.', '.'},
	}

	fmt.Print(isValidSudoku(board))
}
